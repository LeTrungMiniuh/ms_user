package com.ticketsystem.user.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserPreferencesAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserPreferencesAllPropertiesEquals(UserPreferences expected, UserPreferences actual) {
        assertUserPreferencesAutoGeneratedPropertiesEquals(expected, actual);
        assertUserPreferencesAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserPreferencesAllUpdatablePropertiesEquals(UserPreferences expected, UserPreferences actual) {
        assertUserPreferencesUpdatableFieldsEquals(expected, actual);
        assertUserPreferencesUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserPreferencesAutoGeneratedPropertiesEquals(UserPreferences expected, UserPreferences actual) {
        assertThat(actual)
            .as("Verify UserPreferences auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserPreferencesUpdatableFieldsEquals(UserPreferences expected, UserPreferences actual) {
        assertThat(actual)
            .as("Verify UserPreferences relevant properties")
            .satisfies(a -> assertThat(a.getPreferredLanguage()).as("check preferredLanguage").isEqualTo(expected.getPreferredLanguage()))
            .satisfies(a -> assertThat(a.getEmailNotifications()).as("check emailNotifications").isEqualTo(expected.getEmailNotifications())
            )
            .satisfies(a -> assertThat(a.getSmsNotifications()).as("check smsNotifications").isEqualTo(expected.getSmsNotifications()))
            .satisfies(a -> assertThat(a.getPushNotifications()).as("check pushNotifications").isEqualTo(expected.getPushNotifications()))
            .satisfies(a -> assertThat(a.getPhone()).as("check phone").isEqualTo(expected.getPhone()))
            .satisfies(a -> assertThat(a.getEmail()).as("check email").isEqualTo(expected.getEmail()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserPreferencesUpdatableRelationshipsEquals(UserPreferences expected, UserPreferences actual) {
        // empty method
    }
}
